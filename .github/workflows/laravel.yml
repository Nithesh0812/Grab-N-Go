name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Production deployment
      - develop # Development deployment
  pull_request:
    branches:
      - develop # Testing deployment

jobs:
  # Development Stage
  development:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: userone
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --host=127.0.0.1 --password=secret"
          --health-timeout=30s
          --health-retries=5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, pdo, pdo_mysql, bcmath, xml

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Set up .env for Development
        run: |
          cp .env.example .env
          sed -i 's/APP_ENV=production/APP_ENV=development/' .env
          sed -i 's/APP_DEBUG=false/APP_DEBUG=true/' .env
          sed -i 's/DB_HOST=127.0.0.1/DB_HOST=mysql/' .env
          sed -i 's/DB_DATABASE=homestead/DB_DATABASE=userone/' .env
          sed -i 's/DB_USERNAME=root/DB_USERNAME=root/' .env
          sed -i 's/DB_PASSWORD=/DB_PASSWORD=secret/' .env

      - name: Wait for MySQL
        run: |
          for i in {1..10}; do
            if mysqladmin ping -hmysql -uroot -psecret > /dev/null 2>&1; then
              echo "MySQL is ready";
              break;
            fi
            echo "Waiting for MySQL...";
            sleep 5;
          done

      - name: Run Tests
        run: php artisan test --env=development

  # Test Stage
  testing:
    runs-on: ubuntu-latest
    needs: development

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: userone
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --host=127.0.0.1 --password=secret"
          --health-timeout=30s
          --health-retries=5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, pdo, pdo_mysql, bcmath, xml

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Set up .env for Testing
        run: |
          cp .env.testing .env
          sed -i 's/APP_ENV=production/APP_ENV=testing/' .env
          sed -i 's/APP_DEBUG=false/APP_DEBUG=true/' .env
          sed -i 's/DB_HOST=127.0.0.1/DB_HOST=mysql/' .env
          sed -i 's/DB_DATABASE=homestead/DB_DATABASE=userone/' .env
          sed -i 's/DB_USERNAME=root/DB_USERNAME=root/' .env
          sed -i 's/DB_PASSWORD=/DB_PASSWORD=secret/' .env

      - name: Wait for MySQL
        run: |
          for i in {1..10}; do
            if mysqladmin ping -hmysql -uroot -psecret > /dev/null 2>&1; then
              echo "MySQL is ready";
              break;
            fi
            echo "Waiting for MySQL...";
            sleep 5;
          done

      - name: Run Automated Tests
        run: php artisan test --env=testing

  # Production Stage
  production:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: testing

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: userone
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --host=127.0.0.1 --password=secret"
          --health-timeout=30s
          --health-retries=5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, pdo, pdo_mysql, bcmath, xml

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Set up .env for Production
        run: |
          cp .env.production .env
          sed -i 's/APP_ENV=production/APP_ENV=production/' .env
          sed -i 's/APP_DEBUG=false/APP_DEBUG=false/' .env
          sed -i 's/DB_HOST=127.0.0.1/DB_HOST=mysql/' .env
          sed -i 's/DB_DATABASE=homestead/DB_DATABASE=userone/' .env
          sed -i 's/DB_USERNAME=root/DB_USERNAME=root/' .env
          sed -i 's/DB_PASSWORD=/DB_PASSWORD=secret/' .env

      - name: Deploy to Production
        run: |
          php artisan migrate --force
          php artisan cache:clear
          php artisan config:cache
